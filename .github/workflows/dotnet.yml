name: .NET

on:
  push: # all
  pull_request: # all

jobs:

  build:

    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true

      # Project name to pack and publish
      PROJECT_NAME: Bouncer

      # GitHub Packages Feed settings
      GITHUB_FEED: https://nuget.pkg.github.com/Bouncer/
      GITHUB_USER: Benjamin-Justice
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Official NuGet Feed settings
      NUGET_FEED: https://api.nuget.org/v3/index.json
      NUGET_KEY: ${{ secrets.NUGET_API_KEY }}

    runs-on: ${{ matrix.os }}
    strategy: 
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.1.812
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Test
      run: dotnet test --verbosity normal
      
    - name: Build
      run: dotnet build --no-restore -c Release

    - name: Pack
      if: matrix.os == 'ubuntu-latest'
      run: dotnet pack -v normal -c Release --no-restore --include-symbols --include-source -p:PackageVersion=$GITHUB_RUN_ID $PROJECT_NAME/$PROJECT_NAME.*proj
    - name: Upload Artifact
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v2
      with:
        name: nupkg
        path: ./${{ env.PROJECT_NAME }}/bin/Release/*.nupkg


  prerelease:
    needs: build
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: nupkg
      - name: Push to GitHub Feed
        run: |
          for f in ./nupkg/*.nupkg
          do
            curl -vX PUT -u "$GITHUB_USER:$GITHUB_TOKEN" -F package=@$f $GITHUB_FEED
          done
